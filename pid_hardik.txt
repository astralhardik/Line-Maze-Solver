// Line follower robot

// IR sensor

#define s1 2
#define s2 4
#define s3 5
#define s4 7
#define s5 8

#define ledPin 13

// IR Read

int LFSensor[5]={0, 0, 0, 0, 0};


float kp=40,ki=1,kd=0;
int P,I,D;

int degree;
int last_error=0;
int max_speed=150;
int base_speed=100;

//Motor 
#define l1 3
#define l2 6
#define r1 9
#define r2 10

int leftMotorSpeed=0;
int rightMotorSpeed=0;
int PIDvalue=0;

#define STOPPED 0
#define FOLLOWING_LINE 1
#define NO_LINE 2
#define right 3
#define left 4

int mode=1;
int error =0;

void setup()
{
  Serial.begin(9600);
  Serial.println("WELCOME");

  pinMode(2,INPUT);
  pinMode(4,INPUT);
  pinMode(5,INPUT);
  pinMode(7,INPUT);
  pinMode(8,INPUT);

  pinMode(3,OUTPUT);
  pinMode(6,OUTPUT);
  pinMode(9,OUTPUT);
  pinMode(10,OUTPUT);
}


void ledBlink(void)
{
   for (int i = 0; i<4; i++)
   { 
      digitalWrite (ledPin, HIGH);
      delay (300);
      digitalWrite (ledPin, LOW);
      delay (300);
   } 
}

void calculatePID()
{
  P = error;
  I = I + error;
  D = error-last_error;
  PIDvalue = (kp*P) + (ki*I) + (kd*D);
  last_error = error;
}

void motorPIDcontrol()
{
  leftMotorSpeed = base_speed - PIDvalue;
  rightMotorSpeed = base_speed + PIDvalue;

}

void motorStop()
{
  Serial.println("Motor stops");
  digitalWrite(l1,LOW);
  digitalWrite(r1,LOW);
  digitalWrite(l2,LOW);
  digitalWrite(r2,LOW);
}

void motor_reverse()
{
  Serial.println("Motor reverse");
  analogWrite(r1,200);
  analogWrite(l2,150);
  digitalWrite(r2,LOW);
  digitalWrite(l1,LOW);

  delay(3000);
  digitalWrite(l1,LOW);
  digitalWrite(r1,LOW);
  digitalWrite(l2,LOW);
  digitalWrite(r2,LOW);
}

void forward()
{
  analogWrite(l1,leftMotorSpeed);
  analogWrite(r1,rightMotorSpeed);
  digitalWrite(l2,LOW);
  digitalWrite(r2,LOW);
}

void right_turn()
{
  Serial.println("right");
  analogWrite(l1,150);
  analogWrite(r2,150);
  digitalWrite(l2,LOW);
  digitalWrite(r1,LOW);
  delay(300);
  digitalWrite(l1,LOW);
  digitalWrite(r1,LOW);
  digitalWrite(l2,LOW);
  digitalWrite(r2,LOW);
}

void left_turn()
{
  Serial.println("left");
  analogWrite(r1,150);
  analogWrite(l2,150);
  digitalWrite(r2,LOW);
  digitalWrite(l1,LOW);
  delay(300);
  digitalWrite(l1,LOW);
  digitalWrite(r1,LOW);
  digitalWrite(l2,LOW);
  digitalWrite(r2,LOW);
}


void loop()
{
//For white=1 and Black=0

  LFSensor[0] = digitalRead(s1);
  LFSensor[1] = digitalRead(s2);
  LFSensor[2] = digitalRead(s3);
  LFSensor[3] = digitalRead(s4);
  LFSensor[4] = digitalRead(s5);

if((LFSensor[0]== 0 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 1 )) error = 4;

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 1 )&&(LFSensor[4]== 1 )) error = 3; 

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 1 )&&(LFSensor[4]== 0 )) error = 2;

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 1 )&&(LFSensor[3]== 1 )&&(LFSensor[4]== 0 )) error = 1;

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 1 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 0 )) error = 0;

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 1 )&&(LFSensor[2]== 1 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 0 )) error =- 1;

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 1 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 0 )) error = -2;

else if((LFSensor[0]== 1 )&&(LFSensor[1]== 1 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 0 )) error = -3;

else if((LFSensor[0]== 1 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 0 )) error = -4;



if((LFSensor[0]== 1 )&&(LFSensor[1]== 1 )&&(LFSensor[2]== 1 )&&(LFSensor[3]== 1 )&&(LFSensor[4]== 1 )) 
{ 
  mode = STOPPED;
}

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 0 )) 
{ 
  mode = NO_LINE;
}

else if((LFSensor[0]== 0 )&&(LFSensor[1]== 0 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 1 )&&(LFSensor[4]== 1 )) 
{ 
  mode = right;
}

else if((LFSensor[0]== 1 )&&(LFSensor[1]== 1 )&&(LFSensor[2]== 0 )&&(LFSensor[3]== 0 )&&(LFSensor[4]== 0 )) 
{ 
  mode = left;
}

else
mode = FOLLOWING_LINE;

  switch (mode)
  {
    case STOPPED:
       motorStop();
       Serial.println("The End");
       ledBlink();
       last_error=error;
       break;
    case NO_LINE:
       motorStop();
       motor_reverse();
       last_error=0;
       break;
    case FOLLOWING_LINE:
       calculatePID();
       motorPIDcontrol();
       forward();
       Serial.println("forward");
       break;

    case right:
      Serial.println("forward");
      right_turn();
      break;

    case left:
      Serial.println("Left");
      left_turn();
      break;

    
  }

}

